"use strict";(self.webpackChunkengine=self.webpackChunkengine||[]).push([[6569],{35318:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(27378);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},k="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,m=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),k=p(a),s=l,h=k["".concat(m,".").concat(s)]||k[s]||d[s]||r;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=s;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[k]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},2815:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(25773),l=(a(27378),a(35318));const r={id:"valorant",image:"/img/embed/games/valorant.jpg",title:"Valorant Game events",hide_title:!0,sidebar_label:"Valorant",sidebar_position:0,sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!0}}},i=void 0,o={unversionedId:"api/live-game-data/supported-games/valorant",id:"api/live-game-data/supported-games/valorant",title:"Valorant Game events",description:"Please read the overwolf.games.events documentation page to learn how to use Overwolf game events.",source:"@site/../pages/api/live-game-data/supported-games/valorant.mdx",sourceDirName:"api/live-game-data/supported-games",slug:"/api/live-game-data/supported-games/valorant",permalink:"/api/live-game-data/supported-games/valorant",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/pages/../pages/api/live-game-data/supported-games/valorant.mdx",tags:[],version:"current",lastUpdatedBy:"adircoh",lastUpdatedAt:1717595617,formattedLastUpdatedAt:"Jun 5, 2024",sidebarPosition:0,frontMatter:{id:"valorant",image:"/img/embed/games/valorant.jpg",title:"Valorant Game events",hide_title:!0,sidebar_label:"Valorant",sidebar_position:0,sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!0}}},sidebar:"api",previous:{title:"The Finals",permalink:"/api/live-game-data/supported-games/the-finals"},next:{title:"Warframe",permalink:"/api/live-game-data/supported-games/warframe"}},m={},p=[{value:"Sample Apps",id:"sample-apps",level:2},{value:"Available Features",id:"available-features",level:2},{value:"Game event status",id:"game-event-status",level:2},{value:"<code>gep_internal</code>",id:"gep_internal",level:2},{value:"Info Updates",id:"info-updates",level:3},{value:"<em>gep_internal</em> note",id:"gep_internal-note",level:4},{value:"<code>me</code>",id:"me",level:2},{value:"Info Updates",id:"info-updates-1",level:3},{value:"<em>player_name</em> note",id:"player_name-note",level:4},{value:"<em>player_id</em> note",id:"player_id-note",level:4},{value:"<em>region</em> note",id:"region-note",level:4},{value:"<em>agent</em> note",id:"agent-note",level:4},{value:"<em>health</em> note",id:"health-note",level:4},{value:"<em>abilities</em> note",id:"abilities-note",level:4},{value:"<code>match_info</code>",id:"match_info",level:2},{value:"Info Updates",id:"info-updates-2",level:3},{value:"<em>round_number</em> note",id:"round_number-note",level:4},{value:"<em>score</em> note",id:"score-note",level:4},{value:"<em>round_phase</em> note",id:"round_phase-note",level:4},{value:"<em>team</em> note",id:"team-note",level:4},{value:"<em>match_outcome</em> note",id:"match_outcome-note",level:4},{value:"<em>round_report</em> note",id:"round_report-note",level:4},{value:"<em>game_mode</em> note",id:"game_mode-note",level:4},{value:"<em>roster</em> note",id:"roster-note",level:4},{value:"<em>scoreboard</em> note",id:"scoreboard-note",level:4},{value:"<em>kill_feed</em> note",id:"kill_feed-note",level:4},{value:"<em>map</em> note",id:"map-note",level:4},{value:"<em>escalation_stage</em> note",id:"escalation_stage-note",level:4},{value:"Events",id:"events",level:3},{value:"<em>match_start</em> note",id:"match_start-note",level:4},{value:"<em>match_end</em> note",id:"match_end-note",level:4},{value:"<em>spike_planted</em> note",id:"spike_planted-note",level:4},{value:"<em>spike_defused</em> note",id:"spike_defused-note",level:4},{value:"<em>spike_detonated</em> note",id:"spike_detonated-note",level:4},{value:"<em>kill_feed</em> note",id:"kill_feed-note-1",level:4},{value:"<em>shop</em> note",id:"shop-note",level:4},{value:"<code>game_info</code>",id:"game_info",level:2},{value:"Info Updates",id:"info-updates-3",level:3},{value:"<em>scene</em> note",id:"scene-note",level:4},{value:"<em>state</em> note",id:"state-note",level:4},{value:"<code>kill</code>",id:"kill",level:2},{value:"Info Updates",id:"info-updates-4",level:3},{value:"<em>kill</em> note",id:"kill-note",level:4},{value:"<em>assist</em> note",id:"assist-note",level:4},{value:"<em>headshots</em> note",id:"headshots-note",level:4},{value:"Events",id:"events-1",level:3},{value:"<em>kill</em> note",id:"kill-note-1",level:4},{value:"<em>assist</em> note",id:"assist-note-1",level:4},{value:"<em>headshot</em> note",id:"headshot-note",level:4},{value:"<code>death</code>",id:"death",level:2},{value:"Info Updates",id:"info-updates-5",level:3},{value:"<em>death</em> note",id:"death-note",level:4},{value:"Events",id:"events-2",level:3},{value:"<em>death</em> note",id:"death-note-1",level:4}],u=(k="GameInfo",function(e){return console.warn("Component "+k+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)});var k;const d={toc:p};function s(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("head",null,(0,l.kt)("meta",{name:"keywords",content:"API for Valorant, Valorant API, SDK for Valorant, Valorant SDK"})),(0,l.kt)(u,{gameId:21640,page:"docs",mdxType:"GameInfo"}),(0,l.kt)("p",null,"Please read the ",(0,l.kt)("a",{parentName:"p",href:"/api/live-game-data"},"overwolf.games.events")," documentation page to learn how to use Overwolf game events."),(0,l.kt)("h2",{id:"sample-apps"},"Sample Apps"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/overwolf/events-sample-app"},"VALORANT game events sample app"))),(0,l.kt)("h2",{id:"available-features"},"Available Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#gep_internal"},"gep_internal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#me"},"me")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#game_info"},"game_info")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#match_info"},"match_info")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#kill"},"kill")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#death"},"death"))),(0,l.kt)("h2",{id:"game-event-status"},"Game event status"),(0,l.kt)("p",null,"It is highly recommended to communicate errors and warnings to app users. "),(0,l.kt)("p",null,"Check the current game event status ",(0,l.kt)("a",{parentName:"p",href:"/status/"},"here"),". Alternatively, you can easily check that status from your app itself, ",(0,l.kt)("a",{parentName:"p",href:"/topics/using-events/how-to-check-events-status-from-app"},"using our API"),"."),(0,l.kt)("h2",{id:"gep_internal"},(0,l.kt)("inlineCode",{parentName:"h2"},"gep_internal")),(0,l.kt)("h3",{id:"info-updates"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gep_internal"),(0,l.kt)("td",{parentName:"tr",align:null},"gep_internal"),(0,l.kt)("td",{parentName:"tr",align:null},"Local + Public version number"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#gep_internal-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"143.0")))),(0,l.kt)("h4",{id:"gep_internal-note"},(0,l.kt)("em",{parentName:"h4"},"gep_internal")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"gep_internal":{"version_info":"{"local_version":"157.0.1","public_version":"157.0.1","is_updated":true}"}},"feature":"gep_internal"}\n')),(0,l.kt)("h2",{id:"me"},(0,l.kt)("inlineCode",{parentName:"h2"},"me")),(0,l.kt)("h3",{id:"info-updates-1"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"player_name"),(0,l.kt)("td",{parentName:"tr",align:null},"me"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of local player."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#player_name-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"player_id"),(0,l.kt)("td",{parentName:"tr",align:null},"me"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of the local player."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#player_id-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"region"),(0,l.kt)("td",{parentName:"tr",align:null},"me"),(0,l.kt)("td",{parentName:"tr",align:null},"Region of the local player."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#region-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"agent"),(0,l.kt)("td",{parentName:"tr",align:null},"me"),(0,l.kt)("td",{parentName:"tr",align:null},"Character Internal ID."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#agent-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"149.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"health"),(0,l.kt)("td",{parentName:"tr",align:null},"me"),(0,l.kt)("td",{parentName:"tr",align:null},"Character current health."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#health-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"238.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"abilities"),(0,l.kt)("td",{parentName:"tr",align:null},"me"),(0,l.kt)("td",{parentName:"tr",align:null},"Current available abilities"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#abilities-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"239.0")))),(0,l.kt)("h4",{id:"player_name-note"},(0,l.kt)("em",{parentName:"h4"},"player_name")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"me":{"player_name":"Doom#5339"}},"feature":"me"}\n')),(0,l.kt)("h4",{id:"player_id-note"},(0,l.kt)("em",{parentName:"h4"},"player_id")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"me":{"player_id":"f4029eff-92e6-56db-adba-4d073df968a4"}},"feature":"me"}\n')),(0,l.kt)("h4",{id:"region-note"},(0,l.kt)("em",{parentName:"h4"},"region")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"me":{"region":"esp"}},"feature":"me"}\n')),(0,l.kt)("h4",{id:"agent-note"},(0,l.kt)("em",{parentName:"h4"},"agent")," note"),(0,l.kt)("p",null,"Not all agents have their game name match their ID data, since this is an internal name, so take that into account.\nFurthermore, if a character has an ability that gives him different points of view (e.g. Sova with his drone), the ID will change accordingly to the drone."),(0,l.kt)("p",null,"Possible agent values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'"Clay_PC_C" = Raze'),(0,l.kt)("li",{parentName:"ul"},'"Pandemic_PC_C" = Viper'),(0,l.kt)("li",{parentName:"ul"},'"Wraith_PC_C" = Omen'),(0,l.kt)("li",{parentName:"ul"},'"Hunter_PC_C" = Sova'),(0,l.kt)("li",{parentName:"ul"},'"Thorne_PC_C" = Sage'),(0,l.kt)("li",{parentName:"ul"},'"Phoenix_PC_C" = Phoenix'),(0,l.kt)("li",{parentName:"ul"},'"Wushu_PC_C" = Jett'),(0,l.kt)("li",{parentName:"ul"},'"Gumshoe_PC_C" = Cypher'),(0,l.kt)("li",{parentName:"ul"},'"Sarge_PC_C" = Brimstone'),(0,l.kt)("li",{parentName:"ul"},'"Breach_PC_C" = Breach'),(0,l.kt)("li",{parentName:"ul"},'"Vampire_PC_C" = Reyna'),(0,l.kt)("li",{parentName:"ul"},'"Killjoy_PC_C" = Killjoy'),(0,l.kt)("li",{parentName:"ul"},'"Guide_PC_C" = Skye'),(0,l.kt)("li",{parentName:"ul"},'"Stealth_PC_C" = Yoru'),(0,l.kt)("li",{parentName:"ul"},'"Rift_PC_C" = Astra'),(0,l.kt)("li",{parentName:"ul"},'"Grenadier_PC_C" = KAY/O'),(0,l.kt)("li",{parentName:"ul"},'"Deadeye_PC_C" = Chamber'),(0,l.kt)("li",{parentName:"ul"},'"Sprinter_PC_C" = Neon'),(0,l.kt)("li",{parentName:"ul"},'"BountyHunter_PC_C" = Fade'),(0,l.kt)("li",{parentName:"ul"},'"Mage_PC_C" = Harbor'),(0,l.kt)("li",{parentName:"ul"},'"AggroBot_PC_C" = Gekko'),(0,l.kt)("li",{parentName:"ul"},'"Cable_PC_C" = Deadlock'),(0,l.kt)("li",{parentName:"ul"},'"Sequoia_PC_C" = Iso'),(0,l.kt)("li",{parentName:"ul"},'"Smonk_PC_C" = Clove')),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"me":{"agent":"Phoenix_PC_C"}},"feature":"me"}\n')),(0,l.kt)("h4",{id:"health-note"},(0,l.kt)("em",{parentName:"h4"},"health")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature": "me", "category": "me", "key": "health", "data": "100"}\n')),(0,l.kt)("h4",{id:"abilities-note"},(0,l.kt)("em",{parentName:"h4"},"abilities")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature": "me", "category": "me", "key": "abilities", "data": "{\\"C\\":true,\\"Q\\":true,\\"E\\":true,\\"X\\":false}"}\n')),(0,l.kt)("h2",{id:"match_info"},(0,l.kt)("inlineCode",{parentName:"h2"},"match_info")),(0,l.kt)("h3",{id:"info-updates-2"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pseudo_match_id"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"The current match\u2019s ID code.",(0,l.kt)("br",null),(0,l.kt)("br",null),"Example:",(0,l.kt)("br",null),(0,l.kt)("br",null)," ",(0,l.kt)("inlineCode",{parentName:"td"},"0c0ea3df-97ea-4d3a-b1f6-f8e34042251f")),(0,l.kt)("td",{parentName:"tr",align:null},"This is an Overwolf-generated code, unrelated to Riot."),(0,l.kt)("td",{parentName:"tr",align:null},"159.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"round_number"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of current round."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#round_number-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"149.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"score"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of rounds won/lost."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#score-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"149.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"round_phase"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Current state of the round."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#round_phase-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"149.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"team"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Attack / Defense."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#team-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"149.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match_outcome"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"victory/defeat/draw."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#match_outcome-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"149.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"round_report"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"}," Total Damage",(0,l.kt)("br",null))," Total number of bullets hit.",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"}," Number of bullets hit on head.",(0,l.kt)("br",null))," Number of hit headshots that killed."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#round_report-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"150.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"game_mode"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"The current played mode and whether or not it is ranked/custom"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#game_mode-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"151.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"roster"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"}," Player Name",(0,l.kt)("br",null))," Player ID",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"}," Name of picked character",(0,l.kt)("br",null))," Player's Rank",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"td"}," Whether it is the local player",(0,l.kt)("br",null))," If player is a teammate or not."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#roster-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"151.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"scoreboard"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Scoreboard changes and updates during the game"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#scoreboard-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"151.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"kill_feed"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"kill feed updates during the game"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#kill_feed-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"209.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"map"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Current played map name"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#map-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"217.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"escalation_stage"),(0,l.kt)("td",{parentName:"tr",align:null},"match_info"),(0,l.kt)("td",{parentName:"tr",align:null},"Each team's currnt weapon stage in Escalation game mode."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#escalation_stage-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"250.0")))),(0,l.kt)("h4",{id:"round_number-note"},(0,l.kt)("em",{parentName:"h4"},"round_number")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"round_number":"1"}},"feature":"match_info"}\n{"info":{"match_info":{"round_number":"2"}},"feature":"match_info"}\n{"info":{"match_info":{"round_number":"3"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"score-note"},(0,l.kt)("em",{parentName:"h4"},"score")," note"),(0,l.kt)("p",null,"Data example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"score":"{"won":9,"lost":2}"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"round_phase-note"},(0,l.kt)("em",{parentName:"h4"},"round_phase")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"round_phase":"shopping"}},"feature":"match_info"}\n{"info":{"match_info":{"round_phase":"combat"}},"feature":"match_info"}\n{"info":{"match_info":{"round_phase":"end"}},"feature":"match_info"}\n{"info":{"match_info":{"round_phase":"game_end"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"team-note"},(0,l.kt)("em",{parentName:"h4"},"team")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"team":"attack"}},"feature":"match_info"}\n{"info":{"match_info":{"team":"defense"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"match_outcome-note"},(0,l.kt)("em",{parentName:"h4"},"match_outcome")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"match_outcome":"victory"}},"feature":"match_info"}\n{"info":{"match_info":{"match_outcome":"draw"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"round_report-note"},(0,l.kt)("em",{parentName:"h4"},"round_report")," note"),(0,l.kt)("p",null,"This data is ",(0,l.kt)("b",null,"per round"),"."),(0,l.kt)("p",null,"List of parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"damage - total damage dealt by the player"),(0,l.kt)("li",{parentName:"ul"},"hit - number of total hits"),(0,l.kt)("li",{parentName:"ul"},"headshot - number of headshots that did not kill an enemy"),(0,l.kt)("li",{parentName:"ul"},"bodyshots - number of body shots"),(0,l.kt)("li",{parentName:"ul"},"legshots - number of leg shots"),(0,l.kt)("li",{parentName:"ul"},"final_headshot - number of headshots that did kill an enemy"),(0,l.kt)("li",{parentName:"ul"},"damage_received - total damage the local player received"),(0,l.kt)("li",{parentName:"ul"},"hits_received - total hits the local player received"),(0,l.kt)("li",{parentName:"ul"},"ability_damage - total damage done by the use of an ability")),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"match_info": {"round_report": "\\"damage\\":326.3,\\"hit\\":9,\\"headshot\\":1,\\"bodyshots\\":\\"4\\",\\"legshots\\":\\"3\\",\\"final_headshot\\":1,\\"damage_received\\":\\"0\\",\\"hits_received\\":\\"0\\",\\"ability_damage\\":\\"0\\"}"}}\n')),(0,l.kt)("h4",{id:"game_mode-note"},(0,l.kt)("em",{parentName:"h4"},"game_mode")," note"),(0,l.kt)("p",null,"List of parameters:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"mode-")," "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Bomb = Regular game (Unrated/Competitive)"),(0,l.kt)("li",{parentName:"ul"},"Quick Bomb = Spike Rush"),(0,l.kt)("li",{parentName:"ul"},"Deathmatch = Deathmatch"),(0,l.kt)("li",{parentName:"ul"},"Escalation = Escalation"),(0,l.kt)("li",{parentName:"ul"},"Swift = Swiftplay"),(0,l.kt)("li",{parentName:"ul"},"Range = Range "),(0,l.kt)("li",{parentName:"ul"},"Team deathmatch = team_deathmatch")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"custom -")," true/false "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"ranked -")," "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"1 = Competitive  "),(0,l.kt)("li",{parentName:"ul"},"2 = Any other mode ")),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"game_mode":"{"mode":"bomb","custom":true,"ranked":"0"}"}},"feature":"match_info"}\n{"info":{"match_info":{"game_mode":"{"mode":"bomb","custom":false,"ranked":"1"}"}},"feature":"match_info"}\n{"info":{"match_info":{"game_mode":"{"mode":"deathmatch","custom":false,"ranked":"2"}"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"roster-note"},(0,l.kt)("em",{parentName:"h4"},"roster")," note"),(0,l.kt)("b",null,"*Important:*")," If players (or the local player) in the match activate the option to hide their names from players outside their party, the output you will see will be the name of the agent (like `Jett` or in the case of the local player it will be `Me`) instead. It is language-dependent, so that is also important to take into account.",(0,l.kt)("b",null,"*Important:*"),' Roster is not supported in game mode "escalation"',(0,l.kt)("details",{open:!0},(0,l.kt)("summary",null,"Rank value in the roster can be translated using this list (Apr. 2022)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"0 - Unranked"),(0,l.kt)("li",{parentName:"ul"},"3 - Iron_01"),(0,l.kt)("li",{parentName:"ul"},"4 - Iron_02"),(0,l.kt)("li",{parentName:"ul"},"5 - Iron_03"),(0,l.kt)("li",{parentName:"ul"},"6 - Bronze_01  "),(0,l.kt)("li",{parentName:"ul"},"7 - Bronze_02"),(0,l.kt)("li",{parentName:"ul"},"8 - Bronze_03"),(0,l.kt)("li",{parentName:"ul"},"9 - Silver_01"),(0,l.kt)("li",{parentName:"ul"},"10 - Silver_02"),(0,l.kt)("li",{parentName:"ul"},"11 - Silver_03"),(0,l.kt)("li",{parentName:"ul"},"12 - Gold_01"),(0,l.kt)("li",{parentName:"ul"},"13 - Gold_02"),(0,l.kt)("li",{parentName:"ul"},"14 - Gold_03"),(0,l.kt)("li",{parentName:"ul"},"15 - Platinum_01"),(0,l.kt)("li",{parentName:"ul"},"16 - Platinum_02"),(0,l.kt)("li",{parentName:"ul"},"17 - Platinum_03"),(0,l.kt)("li",{parentName:"ul"},"18 - Diamond_01"),(0,l.kt)("li",{parentName:"ul"},"19 - Diamond_02"),(0,l.kt)("li",{parentName:"ul"},"20 - Diamond_03"),(0,l.kt)("li",{parentName:"ul"},"21 - Ascendant_1"),(0,l.kt)("li",{parentName:"ul"},"22 - Ascendant_2"),(0,l.kt)("li",{parentName:"ul"},"23 - Ascendant_3"),(0,l.kt)("li",{parentName:"ul"},"24 - Immortal_01"),(0,l.kt)("li",{parentName:"ul"},"25 - Immortal_02"),(0,l.kt)("li",{parentName:"ul"},"26 - Immortal_03"),(0,l.kt)("li",{parentName:"ul"},"27 - Radiant"))),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"roster_3":"{"name":"Sh4rgaas #EUNE","player_id":"2fb49e77-85c6-522c-a240-27c78a2f9a8f","character":"Pandemic","rank":0,"locked":false,"local":true,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_4":"{"name":"BreachMain #EUW","player_id":"d8b9c6f7-2cc6-5a75-825f-a5658b37eb1d","character":"Vampire","rank":0,"locked":true,"local":false,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_3":"{"name":"Sh4rgaas #EUNE","player_id":"2fb49e77-85c6-522c-a240-27c78a2f9a8f","character":"Pandemic","rank":0,"locked":true,"local":true,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_1":"{"name":"NoobaHooba #8609","player_id":"f0be482b-d182-51a7-a17b-5d5d73d2f0cc","character":"Hunter","rank":0,"locked":false,"local":false,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_0":"{"name":"TroyDarion #6170","player_id":"e70b9fb9-b64a-503e-a0ac-3bd12bcac218","character":"Gumshoe","rank":0,"locked":false,"local":false,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_1":"{"name":"NoobaHooba #8609","player_id":"f0be482b-d182-51a7-a17b-5d5d73d2f0cc","character":"Hunter","rank":0,"locked":true,"local":false,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_0":"{"name":"TroyDarion #6170","player_id":"e70b9fb9-b64a-503e-a0ac-3bd12bcac218","character":"Gumshoe","rank":0,"locked":true,"local":false,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_2":"{"name":"SoloMeoParedes #ESP","player_id":"db36fb3b-e351-5da2-b0e3-c3a0400e8ddd","character":"Thorne","rank":0,"locked":false,"local":false,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_2":"{"name":"SoloMeoParedes #ESP","player_id":"db36fb3b-e351-5da2-b0e3-c3a0400e8ddd","character":"Thorne","rank":0,"locked":true,"local":false,"teammate":true}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_6":"{"name":"zayed2 #EUW","player_id":"4d5efc43-b001-5c47-81d2-2f3cacff5ac7","character":"Wraith","rank":0,"teammate":false,"locked":false,"local":false}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_7":"{"name":"maheralkurdy #7836","player_id":"2080a484-c481-5362-812c-7572f5182b10","character":"Wushu","rank":0,"teammate":false,"locked":false,"local":false}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_5":"{"name":"Kubix11223 #5713","player_id":"dafa74b0-80ad-5dba-a753-70318f91d80a","character":"Thorne","rank":0,"teammate":false,"locked":false,"local":false}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_9":"{"name":"ImJOWY #2905","player_id":"162ec3aa-0114-554e-839f-fbe276467ece","character":"Clay","rank":0,"teammate":false,"locked":false,"local":false}"}},"feature":"match_info"}\n{"info":{"match_info":{"roster_8":"{"name":"kot #8059","player_id":"4d7d329c-efc4-5400-9910-2a6b76f13c7b","character":"Phoenix","rank":0,"teammate":false,"locked":false,"local":false}"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"scoreboard-note"},(0,l.kt)("em",{parentName:"h4"},"scoreboard")," note"),(0,l.kt)("p",null,"List of parameters: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"player_id - the id of the player"),(0,l.kt)("li",{parentName:"ul"},"name - the player's name"),(0,l.kt)("li",{parentName:"ul"},"character - the character's name"),(0,l.kt)("li",{parentName:"ul"},"teammate - is the player in my team or not"),(0,l.kt)("li",{parentName:"ul"},"kills / deaths / assists - The number of kills, deaths and assists during the game "),(0,l.kt)("li",{parentName:"ul"},"money - the amount of money during the game for each player"),(0,l.kt)("li",{parentName:"ul"},"is_local - local player or not (Boolean)"),(0,l.kt)("li",{parentName:"ul"},"alive - if the player is alive true/false"),(0,l.kt)("li",{parentName:"ul"},"shield - the currently used shield for the local and teammate players. Possible values are 0 - no shield, 1 - light shield (25), 2 - heavy shield (50)"),(0,l.kt)("li",{parentName:"ul"},"weapon - the current primary weapon (loadout) name used by the local and teammate players. Visible to all players in a deathmatch like the behavior in the scoreboard during the game. "),(0,l.kt)("li",{parentName:"ul"},"ult_points / ult_max - the current ultimate point out of the maximum ultimate points")),(0,l.kt)("details",{open:!0},(0,l.kt)("summary",null,"List of available weapons"),(0,l.kt)("p",null,"Pistols:"),(0,l.kt)("p",null,"TX_Hud_Pistol_Classic = Classic"),(0,l.kt)("p",null,"TX_Hud_Pistol_Slim = Shorty"),(0,l.kt)("p",null,"TX_Hud_Pistol_AutoPistol = Frenzy"),(0,l.kt)("p",null,"TX_Hud_Pistol_Luger = Ghost"),(0,l.kt)("p",null,"TX_Hud_Pistol_Sheriff = Sheriff"),(0,l.kt)("p",null,"Shotguns:"),(0,l.kt)("p",null,"TX_Hud_Shotguns_Pump = Bucky"),(0,l.kt)("p",null,"TX_Hud_Shotguns_Persuader = Judge"),(0,l.kt)("p",null,"SMGS:"),(0,l.kt)("p",null,"TX_Hud_SMGs_Vector = Stinger"),(0,l.kt)("p",null,"TX_Hud_SMGs_Ninja = Spectre"),(0,l.kt)("p",null,"Rifles:"),(0,l.kt)("p",null,"TX_Hud_Rifles_Burst = Bulldog"),(0,l.kt)("p",null,"TX_Hud_Rifles_DMR = Guardian"),(0,l.kt)("p",null,"TX_Hud_Rifles_Ghost = Phantom"),(0,l.kt)("p",null,"TX_Hud_Rifles_Volcano = Vandal"),(0,l.kt)("p",null,"Snipers:"),(0,l.kt)("p",null,"TX_Hud_Sniper_Bolt = Marshal"),(0,l.kt)("p",null,"TX_Hud_Sniper_Operater = Operator"),(0,l.kt)("p",null,"TX_Hud_Sniper_DoubleSniper = Outlaw"),(0,l.kt)("p",null,"Machine Guns:"),(0,l.kt)("p",null,"TX_Hud_LMG = Ares"),(0,l.kt)("p",null,"TX_Hud_HMG = Odin"),(0,l.kt)("p",null,"Knife:"),(0,l.kt)("p",null,"knife = Knife")),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"scoreboard_0":"{\\"name\\":\\"MrTesting123 #1111\\",\\"character\\":\\"Phoenix\\",\\"teammate\\":true,\\"alive\\":true,\\"player_id\\":\\"d746ecb4-3b1d-52e7-82b0-270c20acfdba\\",\\"shield\\":2,\\"weapon\\":\\"TX_Hud_Sniper_Operater\\",\\"ult_points\\":1,\\"ult_max\\":6,\\"kills\\":0,\\"deaths\\":0,\\"assists\\":0,\\"money\\":99999,\\"is_local\\":true}"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"kill_feed-note"},(0,l.kt)("em",{parentName:"h4"},"kill_feed")," note"),(0,l.kt)("p",null,"List of parameters: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"attacker - the name of the killing player"),(0,l.kt)("li",{parentName:"ul"},"victim  - the name of the killed player"),(0,l.kt)("li",{parentName:"ul"},"assist 1/2/3/4 - the name of the characters who assisted in the kill  "),(0,l.kt)("li",{parentName:"ul"},"ult - name of the ultimate used, reserved for a nonlethal ultimate such as Sage's resurrection "),(0,l.kt)("li",{parentName:"ul"},"headshot - Boolean value if the kill was by headshot"),(0,l.kt)("li",{parentName:"ul"},"weapon - name of the weapon/ability/ultimate used by the killing player or spike/fall damage"),(0,l.kt)("li",{parentName:"ul"},"is_attacker_teammate - true/false if the attacker is a teammate "),(0,l.kt)("li",{parentName:"ul"},"is_victim_teammate - true/false if the victim is a teammate ")),(0,l.kt)("details",{open:!0},(0,l.kt)("summary",null,"List of available weapons"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pistols:")),(0,l.kt)("p",null,"TX_Hud_Pistol_Glock_S = Classic"),(0,l.kt)("p",null,"TX_Hud_Pistol_SawedOff_S = Shorty"),(0,l.kt)("p",null,"TX_Hud_AutoPistol = Frenzy"),(0,l.kt)("p",null,"TX_Hud_Pistol_Luger_S = Ghost"),(0,l.kt)("p",null,"TX_Hud_Pistol_Revolver_S = Sheriff"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Shotguns:")),(0,l.kt)("p",null,"TX_Hud_Pump = Bucky"),(0,l.kt)("p",null,"TX_Hud_Shotguns_Spas12_S = Judge"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"SMGS:")),(0,l.kt)("p",null,"TX_Hud_Vector = Stinger"),(0,l.kt)("p",null,"TX_Hud_SMG_MP5_S = Spectre"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Rifles:")),(0,l.kt)("p",null,"TX_Hud_Burst = Bulldog"),(0,l.kt)("p",null,"tx_hud_dmr = Guardian"),(0,l.kt)("p",null,"TX_Hud_Assault_AR10A2_S = Phantom"),(0,l.kt)("p",null,"TX_Hud_Volcano = Vandal"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Snipers:")),(0,l.kt)("p",null,"TX_Hud_Sniper_BoltAction_S = Marshal"),(0,l.kt)("p",null,"TX_Hud_Operator = Operator"),(0,l.kt)("p",null,"TX_Hud_DoubleSniper = Outlaw"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Machine Guns:")),(0,l.kt)("p",null,"TX_Hud_LMG = Ares"),(0,l.kt)("p",null,"TX_Hud_HMG = Odin"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Knife:")),(0,l.kt)("p",null,"TX_Hud_Knife_Standard_S = Knife")),(0,l.kt)("details",{open:!0},(0,l.kt)("summary",null,"List of available abilities "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Breach:")),(0,l.kt)("p",null,"TX_Breach_FusionBlast = Aftershock"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Brimstone:")),(0,l.kt)("p",null,"TX_Sarge_MolotovLauncher = Incendiary "),(0,l.kt)("p",null,"TX_Sarge_OrbitalStrike = Orbital strike (ULT)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Phoenix:")," "),(0,l.kt)("p",null,"TX_Pheonix_FireWall = Blaze "),(0,l.kt)("p",null,"TX_Pheonix_Molotov = Hot hands "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sova:")),(0,l.kt)("p",null,"TX_Hunter_ShockArrow - Shock bolt"),(0,l.kt)("p",null,"TX_Hunter_BowBlast - Hunters fury"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Chamber:")),(0,l.kt)("p",null,"TX_Hud_Deadeye_Q_Pistol = Headhunter "),(0,l.kt)("p",null,"TX_Hud_Deadeye_X_GiantSlayer = Tour de force (ULT)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Deadlock:")),(0,l.kt)("p",null,"TX_Cable_FishingHook = Annihilation (ULT)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Jett:")),(0,l.kt)("p",null,"TX_Hud_Wushu_X_Dagger = Blade storm (ULT)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Neon:")),(0,l.kt)("p",null,'"TX_Neon_Ult = Overdrive (ULT)'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sage:")),(0,l.kt)("p",null,"TX_Thorne_Heal = Resurrection (ULT)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cypher:")),(0,l.kt)("p",null,"TX_Gumshoe_Tripwire - Trapwire"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kay/o")),(0,l.kt)("p",null,"TX_Gren_Icon = Frag/ment"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Geko: ")),(0,l.kt)("p",null,"TX_Aggrobot_Bubbles = Mosh pit"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Killjoy:")," "),(0,l.kt)("p",null,"TX_KJ_Bees = Nanoswarm"),(0,l.kt)("p",null,"tx_KJ_turret = turret "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Raze:")),(0,l.kt)("p",null,"TX_Clay_Boomba =Boom bot"),(0,l.kt)("p",null,"TX_Clay_ClusterBomb = paint shells "),(0,l.kt)("p",null,"TX_Clay_RocketLauncher = Show stopper (ULT)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Skye:")),(0,l.kt)("p",null,"TX_Guide4 = Trail blazer"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Viper:")),(0,l.kt)("p",null,"TX_Pandemic_AcidLauncher = Snake bite")),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"kill_feed":"{\\"attacker\\":\\"YTDestruct28\\",\\"victim\\":\\"Ghostblade\\",\\"is_attacker_teammate\\":true,\\"is_victim_teammate\\":false,\\"weapon\\":\\"TX_Hud_Volcano\\",\\"ult\\":\\"\\",\\"assist1\\":\\"TX_Killfeed_Sage1\\",\\"assist2\\":\\"\\",\\"assist3\\":\\"\\",\\"assist4\\":\\"\\",\\"headshot\\":false}"}},"feature":"match_info"}\n')),(0,l.kt)("p",null,"None lethal ultimate example: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"kill_feed":"{\\"attacker\\":\\"JacksAtWork\\",\\"victim\\":\\"jaxxxsosparrow\\",\\"is_attacker_teammate\\":true,\\"is_victim_teammate\\":false,\\"weapon\\":\\"\\",\\"ult\\":\\"TX_Thorne_Heal\\",\\"assist1\\":\\"\\",\\"assist2\\":\\"\\",\\"assist3\\":\\"\\",\\"assist4\\":\\"\\",\\"headshot\\":false}"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"map-note"},(0,l.kt)("em",{parentName:"h4"},"map")," note"),(0,l.kt)("p",null,"This info-update is triggered before the match_start event end resets at the end of each game"),(0,l.kt)("p",null,"Possible values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'"Triad" - Haven map'),(0,l.kt)("li",{parentName:"ul"},'"Duality" - Bind map'),(0,l.kt)("li",{parentName:"ul"},'"Bonsai" - Split map'),(0,l.kt)("li",{parentName:"ul"},'"Ascent" - Ascent map'),(0,l.kt)("li",{parentName:"ul"},'"Port" - Icebox map'),(0,l.kt)("li",{parentName:"ul"},'"Foxtrot" - Breeze map'),(0,l.kt)("li",{parentName:"ul"},'"Canyon" - Fracture map'),(0,l.kt)("li",{parentName:"ul"},'"Pitt" - Pearl map'),(0,l.kt)("li",{parentName:"ul"},'"Jam" - Lotus map'),(0,l.kt)("li",{parentName:"ul"},'"Juliett" - Sunset map'),(0,l.kt)("li",{parentName:"ul"},'"Range" - Practice Range map'),(0,l.kt)("li",{parentName:"ul"},'"HURM_Alley" - District map'),(0,l.kt)("li",{parentName:"ul"},'"HURM_Yard" - Piazza map'),(0,l.kt)("li",{parentName:"ul"},'"HURM_Bowl" - Kasbah map'),(0,l.kt)("li",{parentName:"ul"},'"HURM_Helix" - Drift map')),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"match_info":{"map":"Foxtrot"}},"feature":"match_info"}\n')),(0,l.kt)("h4",{id:"escalation_stage-note"},(0,l.kt)("em",{parentName:"h4"},"escalation_stage")," note"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"feature": "match_info", "category": "match_info", "key": "escalation_stage", "data": "{\\"attacker\\":1,\\"defender\\":2}"} \n')),(0,l.kt)("h3",{id:"events"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Event"),(0,l.kt)("th",{parentName:"tr",align:null},"Event Data"),(0,l.kt)("th",{parentName:"tr",align:null},"Fired When"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match_start"),(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},"Match started."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#match_start-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match_end"),(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},"Match ended."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#match_end-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"spike_planted"),(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},"When a spike is planted."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#spike_planted-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"233.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"spike_defused"),(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},"When a spike is defused."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#spike_defused-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"233.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"spike_detonated"),(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},"When a spike is detonated."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#spike_detonated-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"233.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"kill_feed"),(0,l.kt)("td",{parentName:"tr",align:null},"kill feed details"),(0,l.kt)("td",{parentName:"tr",align:null},"When a kill feed appears in the UI."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#kill_feed-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"237.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"shop"),(0,l.kt)("td",{parentName:"tr",align:null},"open/close"),(0,l.kt)("td",{parentName:"tr",align:null},"When the shop window is open or close"),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#shop-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"241.0")))),(0,l.kt)("h4",{id:"match_start-note"},(0,l.kt)("em",{parentName:"h4"},"match_start")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name": "match_start","data":""}]}\n')),(0,l.kt)("h4",{id:"match_end-note"},(0,l.kt)("em",{parentName:"h4"},"match_end")," note"),(0,l.kt)("p",null,"Please note that ",(0,l.kt)("inlineCode",{parentName:"p"},"match_end")," does not work on custom matches or training."),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name": "match_end","data":""}]}\n')),(0,l.kt)("h4",{id:"spike_planted-note"},(0,l.kt)("em",{parentName:"h4"},"spike_planted")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name": "spike_planted","data":""}]}\n')),(0,l.kt)("h4",{id:"spike_defused-note"},(0,l.kt)("em",{parentName:"h4"},"spike_defused")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name": "spike_defused","data":""}]}\n')),(0,l.kt)("h4",{id:"spike_detonated-note"},(0,l.kt)("em",{parentName:"h4"},"spike_detonated")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name": "spike_detonated","data":""}]}\n')),(0,l.kt)("h4",{id:"kill_feed-note-1"},(0,l.kt)("em",{parentName:"h4"},"kill_feed")," note"),(0,l.kt)("p",null,"List of parameters: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"attacker - the name of the killing player"),(0,l.kt)("li",{parentName:"ul"},"victim  - the name of the killed player"),(0,l.kt)("li",{parentName:"ul"},"assist 1/2/3/4 - the name of the characters who assisted in the kill  "),(0,l.kt)("li",{parentName:"ul"},"ult - name of the ultimate used, reserved for a non-lethal ultimate such as Sage's resurrection "),(0,l.kt)("li",{parentName:"ul"},"headshot - Boolean value if the kill was by headshot"),(0,l.kt)("li",{parentName:"ul"},"weapon - name of the weapon/ability/ultimate used by the killing player or spike/fall damage"),(0,l.kt)("li",{parentName:"ul"},"is_attacker_teammate - true/false if the attacker is a teammate "),(0,l.kt)("li",{parentName:"ul"},"is_victim_teammate - true/false if the victim is a teammate ")),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name": "kill_feed","data":"{\\"attacker\\":\\"YTDestruct28\\",\\"victim\\":\\"Ghostblade\\",\\"is_attacker_teammate\\":true,\\"is_victim_teammate\\":false,\\"weapon\\":\\"TX_Hud_Volcano\\",\\"ult\\":\\"\\",\\"assist1\\":\\"TX_Killfeed_Sage1\\",\\"assist2\\":\\"\\",\\"assist3\\":\\"\\",\\"assist4\\":\\"\\",\\"headshot\\":false}}]}\n')),(0,l.kt)("h4",{id:"shop-note"},(0,l.kt)("em",{parentName:"h4"},"shop")," note"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"This feature is not yet supported in TTM game mode")),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name": "shop","data":"open"}]}\n')),(0,l.kt)("h2",{id:"game_info"},(0,l.kt)("inlineCode",{parentName:"h2"},"game_info")),(0,l.kt)("h3",{id:"info-updates-3"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"scene"),(0,l.kt)("td",{parentName:"tr",align:null},"game_info"),(0,l.kt)("td",{parentName:"tr",align:null},"The current scene-state."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#scene-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},"game_info"),(0,l.kt)("td",{parentName:"tr",align:null},"The current game-state."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#state-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")))),(0,l.kt)("h4",{id:"scene-note"},(0,l.kt)("em",{parentName:"h4"},"scene")," note"),(0,l.kt)("p",null,'"Scene" info includes the scenes of the game and the name of the map that is currently played (like in the example down below - Triad).'),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"game_info":{"scene":"Triad"}},"feature":"game_info"}\n')),(0,l.kt)("p",null,"Possible Scene values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'"MainMenu" - Main menu'),(0,l.kt)("li",{parentName:"ul"},'"Triad" - Haven map'),(0,l.kt)("li",{parentName:"ul"},'"Duality" - Bind map'),(0,l.kt)("li",{parentName:"ul"},'"Bonsai" - Split map'),(0,l.kt)("li",{parentName:"ul"},'"Ascent" - Ascent map'),(0,l.kt)("li",{parentName:"ul"},'"Port" - Icebox map'),(0,l.kt)("li",{parentName:"ul"},'"Foxtrot" - Breeze map'),(0,l.kt)("li",{parentName:"ul"},'"Canyon" - Fracture map'),(0,l.kt)("li",{parentName:"ul"},'"Pitt" - Pearl map'),(0,l.kt)("li",{parentName:"ul"},'"Range" - Practice Range map'),(0,l.kt)("li",{parentName:"ul"},'"CharacterSelectPersistentLevel" - Character Selection')),(0,l.kt)("h4",{id:"state-note"},(0,l.kt)("em",{parentName:"h4"},"state")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"game_info":{"state":"WaitingToStart"}},"feature":"game_info"}\n{"info":{"game_info":{"state":"InProgress"}},"feature":"game_info"}\n')),(0,l.kt)("p",null,"Possible states:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'"WaitingToStart"'),(0,l.kt)("li",{parentName:"ul"},'"LeavingMap"'),(0,l.kt)("li",{parentName:"ul"},'"Aborted"'),(0,l.kt)("li",{parentName:"ul"},'"InProgress"'),(0,l.kt)("li",{parentName:"ul"},'"Init"')),(0,l.kt)("h2",{id:"kill"},(0,l.kt)("inlineCode",{parentName:"h2"},"kill")),(0,l.kt)("h3",{id:"info-updates-4"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"kills"),(0,l.kt)("td",{parentName:"tr",align:null},"kill"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of kills performed by the local player."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#kill-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"assists"),(0,l.kt)("td",{parentName:"tr",align:null},"kill"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of assists performed by the local player."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#assist-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"headshots"),(0,l.kt)("td",{parentName:"tr",align:null},"kill"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of headshots performed by the local player."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#headshots-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"150.0")))),(0,l.kt)("h4",{id:"kill-note"},(0,l.kt)("em",{parentName:"h4"},"kill")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"kill":{"kills":1}},"feature":"kill"}\n{"info":{"kill":{"kills":2}},"feature":"kill"}\n{"info":{"kill":{"kills":3}},"feature":"kill"}\n')),(0,l.kt)("h4",{id:"assist-note"},(0,l.kt)("em",{parentName:"h4"},"assist")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"kill":{"assists":1}},"feature":"kill"}\n')),(0,l.kt)("h4",{id:"headshots-note"},(0,l.kt)("em",{parentName:"h4"},"headshots")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"kill":{"headshots":1}},"feature":"kill"}\n')),(0,l.kt)("h3",{id:"events-1"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Event"),(0,l.kt)("th",{parentName:"tr",align:null},"Event Data"),(0,l.kt)("th",{parentName:"tr",align:null},"Fired When"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"kill"),(0,l.kt)("td",{parentName:"tr",align:null},"Total kills"),(0,l.kt)("td",{parentName:"tr",align:null},"Kill is performed."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#kill-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"assist"),(0,l.kt)("td",{parentName:"tr",align:null},"Total assists"),(0,l.kt)("td",{parentName:"tr",align:null},"Assist is performed."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#assist-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"headshot"),(0,l.kt)("td",{parentName:"tr",align:null},"Total headshots"),(0,l.kt)("td",{parentName:"tr",align:null},"Headshot is performed."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#headshot-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"150.0")))),(0,l.kt)("h4",{id:"kill-note-1"},(0,l.kt)("em",{parentName:"h4"},"kill")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"kill","data":6}]}\n')),(0,l.kt)("h4",{id:"assist-note-1"},(0,l.kt)("em",{parentName:"h4"},"assist")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"assist","data":1}]}\n')),(0,l.kt)("h4",{id:"headshot-note"},(0,l.kt)("em",{parentName:"h4"},"headshot")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"headshot","data":"1"}]}\n')),(0,l.kt)("h2",{id:"death"},(0,l.kt)("inlineCode",{parentName:"h2"},"death")),(0,l.kt)("h3",{id:"info-updates-5"},"Info Updates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"key"),(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deaths"),(0,l.kt)("td",{parentName:"tr",align:null},"death"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of deaths by the local player."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#death-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")))),(0,l.kt)("h4",{id:"death-note"},(0,l.kt)("em",{parentName:"h4"},"death")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"info":{"death":{"deaths":1}},"feature":"death"}\n')),(0,l.kt)("h3",{id:"events-2"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Event"),(0,l.kt)("th",{parentName:"tr",align:null},"Event Data"),(0,l.kt)("th",{parentName:"tr",align:null},"Fired When"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"),(0,l.kt)("th",{parentName:"tr",align:null},"Since GEP Ver."))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"death"),(0,l.kt)("td",{parentName:"tr",align:null},"Total deaths"),(0,l.kt)("td",{parentName:"tr",align:null},"Local player died."),(0,l.kt)("td",{parentName:"tr",align:null},"See ",(0,l.kt)("a",{parentName:"td",href:"#death-note"},"notes")),(0,l.kt)("td",{parentName:"tr",align:null},"148.0")))),(0,l.kt)("h4",{id:"death-note-1"},(0,l.kt)("em",{parentName:"h4"},"death")," note"),(0,l.kt)("p",null,"Data Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{"events":[{"name":"death","data":14}]}\n')))}s.isMDXComponent=!0}}]);