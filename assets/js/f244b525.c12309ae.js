"use strict";(self.webpackChunkengine=self.webpackChunkengine||[]).push([[1746],{35318:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var l=a(27378);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=l.createContext({}),p=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return l.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=p(a),k=n,c=u["".concat(o,".").concat(k)]||u[k]||m[k]||r;return a?l.createElement(c,i(i({ref:t},s),{},{components:a})):l.createElement(c,i({ref:t},s))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=k;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[u]="string"==typeof e?e:n,i[1]=d;for(var p=2;p<r;p++)i[p]=a[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}k.displayName="MDXCreateElement"},88663:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var l=a(25773),n=(a(27378),a(35318));const r={id:"io",image:"/img/embed/api-docs.jpg",title:"overwolf.io API",sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1},category:{id:"overwolf"}}},i=void 0,d={unversionedId:"api/io/io",id:"api/io/io",title:"overwolf.io API",description:"Check whether a certain file exists and/or to write content into files.",source:"@site/../pages/api/io/io.mdx",sourceDirName:"api/io",slug:"/api/io/",permalink:"/api/io/",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/pages/../pages/api/io/io.mdx",tags:[],version:"current",lastUpdatedBy:"adircoh",lastUpdatedAt:1723707552,formattedLastUpdatedAt:"Aug 15, 2024",frontMatter:{id:"io",image:"/img/embed/api-docs.jpg",title:"overwolf.io API",sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1},category:{id:"overwolf"}}},sidebar:"api",previous:{title:"overwolf.games.tracked API",permalink:"/api/games/tracked"},next:{title:"overwolf.io.paths API",permalink:"/api/io/paths"}},o={},p=[{value:"Methods Reference",id:"methods-reference",level:2},{value:"Types Reference",id:"types-reference",level:2},{value:"Sample app",id:"sample-app",level:2},{value:"fileExists(filePath, callback)",id:"fileexistsfilepath-callback",level:2},{value:"Version added: 0.93",id:"version-added-093",level:4},{value:"writeFileContents(filePath, content, encoding, triggerUacIfRequired, callback)",id:"writefilecontentsfilepath-content-encoding-triggeruacifrequired-callback",level:2},{value:"Version added: 0.93",id:"version-added-093-1",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem",level:4},{value:"readFileContents(filePath, encoding, callback)",id:"readfilecontentsfilepath-encoding-callback",level:2},{value:"Version added: 0.93",id:"version-added-093-2",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-1",level:4},{value:"copyFile(src, dst, overrideFile, reserved, callback)",id:"copyfilesrc-dst-overridefile-reserved-callback",level:2},{value:"Version added: 0.93",id:"version-added-093-3",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-2",level:4},{value:"Usage example",id:"usage-example",level:4},{value:"dir(path, callback)",id:"dirpath-callback",level:2},{value:"Version added: 0.141",id:"version-added-0141",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-3",level:4},{value:"Usage example",id:"usage-example-1",level:4},{value:"readBinaryFile(path, options, callback)",id:"readbinaryfilepath-options-callback",level:2},{value:"Version added: 0.141",id:"version-added-0141-1",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-4",level:4},{value:"readTextFile(path, options, callback)",id:"readtextfilepath-options-callback",level:2},{value:"Version added: 0.141",id:"version-added-0141-2",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-5",level:4},{value:"exist(path, callback)",id:"existpath-callback",level:2},{value:"Version added: 0.141",id:"version-added-0141-3",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-6",level:4},{value:"listenOnFile(id, path, option, callback)",id:"listenonfileid-path-option-callback",level:2},{value:"Version added: 0.141",id:"version-added-0141-4",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-7",level:4},{value:"Usage example",id:"usage-example-2",level:4},{value:"stopFileListener(id)",id:"stopfilelistenerid",level:2},{value:"Version added: 0.141",id:"version-added-0141-5",level:4},{value:"Permissions required: FileSystem",id:"permissions-required-filesystem-8",level:4},{value:"stopFileListener notes",id:"stopfilelistener-notes",level:4},{value:"watchFile(filePath, callback)",id:"watchfilefilepath-callback",level:2},{value:"Version added: 0.208",id:"version-added-0208",level:4},{value:"Note",id:"note",level:4},{value:"stopWatchingFile(filePath, callback)",id:"stopwatchingfilefilepath-callback",level:2},{value:"Version added: 0.208",id:"version-added-0208-1",level:4},{value:"fileListenerState enum",id:"filelistenerstate-enum",level:2},{value:"encoding enum",id:"encoding-enum",level:2},{value:"eEncoding enum",id:"eencoding-enum",level:2},{value:"ReadFileOptions Object",id:"readfileoptions-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-6",level:4},{value:"ListenFileOptions Object",id:"listenfileoptions-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-7",level:4},{value:"ListenOnFileResult Object",id:"listenonfileresult-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-8",level:4},{value:"WatchedFileChanged Object",id:"watchedfilechanged-object",level:2},{value:"Version added: 0.208",id:"version-added-0208-2",level:4},{value:"WatchEventType Enum",id:"watcheventtype-enum",level:2},{value:"Version added: 0.208",id:"version-added-0208-3",level:4},{value:"DirResult Object",id:"dirresult-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-9",level:4},{value:"Example data",id:"example-data",level:4},{value:"FileExistsResult Object",id:"fileexistsresult-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-10",level:4},{value:"Example data",id:"example-data-1",level:4},{value:"ReadFileContentsResult Object",id:"readfilecontentsresult-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-11",level:4},{value:"Example data",id:"example-data-2",level:4},{value:"ListenOnFileResult Object",id:"listenonfileresult-object-1",level:2},{value:"Version added: 0.141",id:"version-added-0141-12",level:4},{value:"Example data",id:"example-data-3",level:4},{value:"notes",id:"notes",level:4},{value:"ExistsResult Object",id:"existsresult-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-13",level:4},{value:"Example data",id:"example-data-4",level:4},{value:"ReadBinaryFileResult Object",id:"readbinaryfileresult-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-14",level:4},{value:"Example data",id:"example-data-5",level:4},{value:"ReadTextFileResult Object",id:"readtextfileresult-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-15",level:4},{value:"Example data",id:"example-data-6",level:4},{value:"FileInfo Object",id:"fileinfo-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-16",level:4},{value:"FileInDir Object",id:"fileindir-object",level:2},{value:"Version added: 0.141",id:"version-added-0141-17",level:4},{value:"Example data",id:"example-data-7",level:4}],s={toc:p};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Check whether a certain file exists and/or to write content into files.  "),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"For app-related I/O functionalities, use the ",(0,n.kt)("a",{parentName:"p",href:"extensions/io"},"overwolf.extensions.io")," API.\nIn addition, the ",(0,n.kt)("a",{parentName:"p",href:"/topics/using-plugins/simple-io-plugin"},"simple I/O plugin")," offers several more general I/O features that are not available through the APIs.   ")),(0,n.kt)("h2",{id:"methods-reference"},"Methods Reference"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#fileexistsfilepath-callback"},"overwolf.io.fileExists()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#writefilecontentsfilepath-content-encoding-triggeruacifrequired-callback"},"overwolf.io.writeFileContents()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#readfilecontentsfilepath-encoding-callback"},"overwolf.io.readFileContents()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#copyfilesrc-dst-overridefile-reserved-callback"},"overwolf.io.copyFile()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#dirpath-callback"},"overwolf.io.dir()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#readbinaryfilepath-options-callback"},"overwolf.io.readBinaryFile()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#readtextfilepath-options-callback"},"overwolf.io.readTextFile()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#existpath-callback"},"overwolf.io.exist()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#listenonfileid-path-option-callback"},"overwolf.io.listenOnFile()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#stopfilelistenerid"},"overwolf.io.stopFileListener()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#watchfilefilepath-callback"},"overwolf.io.watchFile()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#stopwatchingfilefilepath-callback"},"overwolf.io.stopWatchingFile()"))),(0,n.kt)("h2",{id:"types-reference"},"Types Reference"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eencoding-enum"},"overwolf.io.enums.eEncoding")," enum"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#encoding-enum"},"overwolf.io.enums.encoding")," enum"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#filelistenerstate-enum"},"overwolf.io.enums.fileListenerState")," enum"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#readfileoptions-object"},"overwolf.io.ReadFileOptions")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#listenfileoptions-object"},"overwolf.io.ListenFileOptions")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#dirresult-object"},"overwolf.io.DirResult")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#fileexistsresult-object"},"overwolf.io.FileExistsResult")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#readfilecontentsresult-object"},"overwolf.io.ReadFileContentsResult")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#listenonfileresult-object"},"overwolf.io.ListenOnFileResult")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#watchedfilechanged-object"},"overwolf.io.WatchedFileChanged")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#watcheventtype-enum"},"overwolf.io.enums.WatchEventType")," enum"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#existsresult-object"},"overwolf.io.ExistsResult")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#readbinaryfileresult-object"},"overwolf.io.ReadBinaryFileResult")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#readtextfileresult-object"},"overwolf.io.ReadTextFileResult")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#fileinfo-object"},"overwolf.io.FileInfo")," Object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#fileindir-object"},"overwolf.io.FileInDir")," Object")),(0,n.kt)("h2",{id:"sample-app"},"Sample app"),(0,n.kt)("p",null,"In our ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/overwolf/apis-sample-apps"},"APIs sample apps repository"),", you can find and download a sample app that demonstrates the usage in the IO API: "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"io-sample")," - Demonstrates how to open and load a file to your app, Display it, Add some content, and Write it back to the file.  ")),(0,n.kt)("p",null,"It's a great place to get started - All the samples in this repository are built with JS code and demonstrate primary usage in the API."),(0,n.kt)("h2",{id:"fileexistsfilepath-callback"},"fileExists(filePath, callback)"),(0,n.kt)("h4",{id:"version-added-093"},"Version added: 0.93"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Checks for the existence of a file in a given path.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"filePath"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Path to check for")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},"function"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns the result")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#fileexistsresult-object"},"(Result: FileExistsResult)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h2",{id:"writefilecontentsfilepath-content-encoding-triggeruacifrequired-callback"},"writeFileContents(filePath, content, encoding, triggerUacIfRequired, callback)"),(0,n.kt)("h4",{id:"version-added-093-1"},"Version added: 0.93"),(0,n.kt)("h4",{id:"permissions-required-filesystem"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Writes content into a target text file.")),(0,n.kt)("p",null,"If the file doesn\u2019t exist, it will be created, along with any required directories along the path. Otherwise, the file\u2019s content will be overwritten."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"filePath"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Path to check for")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"content"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Content to write")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"encoding"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#eencoding-enum"},"eEncoding")," enum"),(0,n.kt)("td",{parentName:"tr",align:null},"Encoding to use")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"triggerUacIfRequired"),(0,n.kt)("td",{parentName:"tr",align:null},"bool"),(0,n.kt)("td",{parentName:"tr",align:null},"If additional permissions are required, triggers the Windows UAC dialog")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},"(Result) => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h2",{id:"readfilecontentsfilepath-encoding-callback"},"readFileContents(filePath, encoding, callback)"),(0,n.kt)("h4",{id:"version-added-093-2"},"Version added: 0.93"),(0,n.kt)("h4",{id:"permissions-required-filesystem-1"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Returns a string with the targeted text file\u2019s content.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"filePath"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Full path of the targeted file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"encoding"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#eencoding-enum"},"eEncoding")," enum"),(0,n.kt)("td",{parentName:"tr",align:null},"Encoding to use")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#readfilecontentsresult-object"},"(Result: ReadFileContentsResult)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns the result")))),(0,n.kt)("h2",{id:"copyfilesrc-dst-overridefile-reserved-callback"},"copyFile(src, dst, overrideFile, reserved, callback)"),(0,n.kt)("h4",{id:"version-added-093-3"},"Version added: 0.93"),(0,n.kt)("h4",{id:"permissions-required-filesystem-2"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Copy a file from the local extension directory to a destination in the local machine.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"src"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"A relative file path from your extension's root folder, or a full overwolf-extension:// URI to the source file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"dst"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Destination absolute path to copy to including filename. See usage example below")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"overrideFile"),(0,n.kt)("td",{parentName:"tr",align:null},"bool"),(0,n.kt)("td",{parentName:"tr",align:null},'"true" if you want an existing file to be overwritten, "false" otherwise')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"reserved"),(0,n.kt)("td",{parentName:"tr",align:null},"bool"),(0,n.kt)("td",{parentName:"tr",align:null},"For future use")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},"(Result) => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h4",{id:"usage-example"},"Usage example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'overwolf.io.copyFile("Fortnite Battle Royale 03-19-2020 14-10-18-457.mp4","C:/Users/Hal9000/AppData/Local/Overwolf/Extensions/nhmkaollkcmjiecdnnjmgfifjgkfegkljnjjbipp/1.0.18/copy.mp4",false,false,console.log)\n\n')),(0,n.kt)("h2",{id:"dirpath-callback"},"dir(path, callback)"),(0,n.kt)("h4",{id:"version-added-0141"},"Version added: 0.141"),(0,n.kt)("h4",{id:"permissions-required-filesystem-3"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Lists all files and folder in the target path.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"path"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The target path")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#dirresult-object"},"(Result: DirResult)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h4",{id:"usage-example-1"},"Usage example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'overwolf.io.dir("C:/Users/Hal9000/Videos/Overwolf",console.log)\n')),(0,n.kt)("h2",{id:"readbinaryfilepath-options-callback"},"readBinaryFile(path, options, callback)"),(0,n.kt)("h4",{id:"version-added-0141-1"},"Version added: 0.141"),(0,n.kt)("h4",{id:"permissions-required-filesystem-4"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Read binary file.")),(0,n.kt)("p",null," Reads a file's contents and returns an array of byte values.",(0,n.kt)("br",{parentName:"p"}),"\n","This function is extremely slow! Use it only for small files or to get file header info using the ",(0,n.kt)("a",{parentName:"p",href:"#readfileoptions-object"},"options")," parameter (maxBytesToRead) to limit the amount of data to fetch."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"path"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The target path")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#readfileoptions-object"},"ReadFileOptions")," object"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#readbinaryfileresult-object"},"(Result: ReadBinaryFileResult)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h2",{id:"readtextfilepath-options-callback"},"readTextFile(path, options, callback)"),(0,n.kt)("h4",{id:"version-added-0141-2"},"Version added: 0.141"),(0,n.kt)("h4",{id:"permissions-required-filesystem-5"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Read text file.")),(0,n.kt)("p",null,"Reads a file's contents and returns it as text."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"path"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The target path")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#readfileoptions-object"},"ReadFileOptions")," object"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#readtextfileresult-object"},"(Result: ReadTextFileResult)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h2",{id:"existpath-callback"},"exist(path, callback)"),(0,n.kt)("h4",{id:"version-added-0141-3"},"Version added: 0.141"),(0,n.kt)("h4",{id:"permissions-required-filesystem-6"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Is path exist.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"path"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The target path")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#existsresult-object"},"(Result: ExistsResult)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h2",{id:"listenonfileid-path-option-callback"},"listenOnFile(id, path, option, callback)"),(0,n.kt)("h4",{id:"version-added-0141-4"},"Version added: 0.141"),(0,n.kt)("h4",{id:"permissions-required-filesystem-7"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Start listening on file.")),(0,n.kt)("p",null," Stream a file (text files only), line-by-line, from the local filesystem."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"id"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"listen Id")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"path"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"file path")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#listenfileoptions-object"},"ListenFileOptions")," Object"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#listenonfileresult-object"},"(Result: ListenOnFileResult)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Returns with the result")))),(0,n.kt)("h4",{id:"usage-example-2"},"Usage example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"overwolf.io.listenOnFile('test.txt','C:\\\\test\\\\test.txt', {},console.log)\n")),(0,n.kt)("h2",{id:"stopfilelistenerid"},"stopFileListener(id)"),(0,n.kt)("h4",{id:"version-added-0141-5"},"Version added: 0.141"),(0,n.kt)("h4",{id:"permissions-required-filesystem-8"},"Permissions required: FileSystem"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Stop listening on file.")),(0,n.kt)("p",null,"Stop streaming a file that you previously passed when calling  ",(0,n.kt)("a",{parentName:"p",href:"#listenonfileid-path-option-callback"},"listenOnFile"),".",(0,n.kt)("br",{parentName:"p"}),"\n","There are no callbacks - as this will never fail (even if the stream doesn't exist)."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"id"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"listen Id")))),(0,n.kt)("h4",{id:"stopfilelistener-notes"},"stopFileListener notes"),(0,n.kt)("p",null,"On stop, ",(0,n.kt)("a",{parentName:"p",href:"#listenonfileid-path-option-callback"},"listenOnFile"),' callback will trigger with a "truncated" state:'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "success" : true, \n    "error": "", \n    "state": "truncated" \n    ...\n}\n')),(0,n.kt)("h2",{id:"watchfilefilepath-callback"},"watchFile(filePath, callback)"),(0,n.kt)("h4",{id:"version-added-0208"},"Version added: 0.208"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Watches a file for ",(0,n.kt)("strong",{parentName:"p"},"any")," changes that occur to its content.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"filePath"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Path to the file to watch")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#watchedfilechanged-object"},"(Result: WatchedFileChanged)")," => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Callback that is called upon registering, and on every subsequent file change")))),(0,n.kt)("h4",{id:"note"},"Note"),(0,n.kt)("p",null,"File changes will be listened to forever, unless:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The file is renamed/deleted. In which case, the listener will be notified of the change, and will then stop."),(0,n.kt)("li",{parentName:"ul"},"File watching on this file is closed, via ",(0,n.kt)("a",{parentName:"li",href:"#stopwatchingfilefilepath-callback"},(0,n.kt)("inlineCode",{parentName:"a"},"overwolf.io.stopWatchingFile()")))),(0,n.kt)("h2",{id:"stopwatchingfilefilepath-callback"},"stopWatchingFile(filePath, callback)"),(0,n.kt)("h4",{id:"version-added-0208-1"},"Version added: 0.208"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Stops watching the specified file")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"filePath"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Path to the file to stop watching")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"callback"),(0,n.kt)("td",{parentName:"tr",align:null},"(Reuslt) => void"),(0,n.kt)("td",{parentName:"tr",align:null},"Callback that is called with the result of the stop operation")))),(0,n.kt)("h2",{id:"filelistenerstate-enum"},"fileListenerState enum"),(0,n.kt)("p",null,"File listener state."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Options"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"started")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"running")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"terminated")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"truncated")))),(0,n.kt)("h2",{id:"encoding-enum"},"encoding enum"),(0,n.kt)("p",null,"encoding types."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Options"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Default")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UTF8")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UTF32")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Unicode")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UTF7")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ASCII")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"BigEndianUnicode")))),(0,n.kt)("h2",{id:"eencoding-enum"},"eEncoding enum"),(0,n.kt)("p",null,"File encoding."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Options"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UTF8")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UTF8BOM")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Unicode")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UnicodeBOM")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ASCII")))),(0,n.kt)("h2",{id:"readfileoptions-object"},"ReadFileOptions Object"),(0,n.kt)("h4",{id:"version-added-0141-6"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Describes the different options to read a file.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"encoding"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#eencoding-enum"},"eEncoding")," enum"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maxBytesToRead"),(0,n.kt)("td",{parentName:"tr",align:null},"int"),(0,n.kt)("td",{parentName:"tr",align:null},"default is 0 => read all file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"offset"),(0,n.kt)("td",{parentName:"tr",align:null},"int"),(0,n.kt)("td",{parentName:"tr",align:null},"start reading point, default is 0")))),(0,n.kt)("h2",{id:"listenfileoptions-object"},"ListenFileOptions Object"),(0,n.kt)("h4",{id:"version-added-0141-7"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Describes the different options to listen to a file.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"skipToEnd"),(0,n.kt)("td",{parentName:"tr",align:null},"bool"),(0,n.kt)("td",{parentName:"tr",align:null},"should skip directly to end of file. default if false")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"encoding"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#encoding-enum"},"encoding")," enum"),(0,n.kt)("td",{parentName:"tr",align:null},"Encoding to use. ",(0,n.kt)("inlineCode",{parentName:"td"},"Default")," is is the default value")))),(0,n.kt)("h2",{id:"listenonfileresult-object"},"ListenOnFileResult Object"),(0,n.kt)("h4",{id:"version-added-0141-8"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Returned when subscribing to listen to a file.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"content"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The current content of the file")))),(0,n.kt)("h2",{id:"watchedfilechanged-object"},"WatchedFileChanged Object"),(0,n.kt)("h4",{id:"version-added-0208-2"},"Version added: 0.208"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Returned when a watched file is changed (as well as when subscribing).")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"eventType"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#watcheventtype-enum"},"WatchEventType")),(0,n.kt)("td",{parentName:"tr",align:null},"The type of change that occured")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"path"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The current path of the file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"newPath (optional)"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"The new file path. Only returned when ",(0,n.kt)("inlineCode",{parentName:"td"},"eventType")," is ",(0,n.kt)("inlineCode",{parentName:"td"},"Renamed"),".")))),(0,n.kt)("h2",{id:"watcheventtype-enum"},"WatchEventType Enum"),(0,n.kt)("h4",{id:"version-added-0208-3"},"Version added: 0.208"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The type of change observed on a watched file.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Options"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Registered")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Changed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Renamed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Deleted")))),(0,n.kt)("h2",{id:"dirresult-object"},"DirResult Object"),(0,n.kt)("h4",{id:"version-added-0141-9"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"List of files and folders.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"data"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#fileindir-object"},"FileInDir"),"[]"),(0,n.kt)("td",{parentName:"tr",align:null},"List of files and folders")))),(0,n.kt)("h4",{id:"example-data"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "success":true,\n   "path":"C:/Users/Hal9000/Videos/Overwolf",\n   "data":[\n      {\n         "name":"Fortnite 03-19-2020 17-15-56-087.mp4",\n         "type":"file"\n      },\n      {\n         "name":"Game Events Simulator",\n         "type":"dir"\n      },\n      {\n         "name":"Game Summary",\n         "type":"dir"\n      }\n\n   ]\n}\n')),(0,n.kt)("h2",{id:"fileexistsresult-object"},"FileExistsResult Object"),(0,n.kt)("h4",{id:"version-added-0141-10"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The result.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"found"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},"Return if the file exist or not")))),(0,n.kt)("h4",{id:"example-data-1"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "success":true,\n   "found":true\n}\n')),(0,n.kt)("h2",{id:"readfilecontentsresult-object"},"ReadFileContentsResult Object"),(0,n.kt)("h4",{id:"version-added-0141-11"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"the status of the request and the file contect.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"content"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"string with the taraget file\u2019s content")))),(0,n.kt)("h4",{id:"example-data-2"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{"success":true,"content":"Hello World!"}\n')),(0,n.kt)("h2",{id:"listenonfileresult-object-1"},"ListenOnFileResult Object"),(0,n.kt)("h4",{id:"version-added-0141-12"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The result.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"state"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Current callback state. Only valid only when "success" is true ',(0,n.kt)("a",{parentName:"td",href:"#filelistenerstate-enum"},"overwolf.io.enums.fileListenerState"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"content"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"string with the taraget line content")))),(0,n.kt)("h4",{id:"example-data-3"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "success" : true, // when false the callback will stop listen\n    "error": "", // valid only when success = false\n    "state": "started|running|terminated|truncated", // valid only when success =true (overwolf.io.enums.fileListenerState) \n    "content": "" //the line  \n}\n')),(0,n.kt)("h4",{id:"notes"},"notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'"state" is from type ',(0,n.kt)("a",{parentName:"li",href:"#filelistenerstate-enum"},"overwolf.io.enums.fileListenerState"),"."),(0,n.kt)("li",{parentName:"ul"},"Please read what happens when you call ",(0,n.kt)("a",{parentName:"li",href:"#stopfilelistener-notes"},"stopFileListener()"),".")),(0,n.kt)("h2",{id:"existsresult-object"},"ExistsResult Object"),(0,n.kt)("h4",{id:"version-added-0141-13"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The result.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"exist"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},"Return if the file exist or not")))),(0,n.kt)("h4",{id:"example-data-4"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "success":true,\n   "exist":true\n}\n')),(0,n.kt)("h2",{id:"readbinaryfileresult-object"},"ReadBinaryFileResult Object"),(0,n.kt)("h4",{id:"version-added-0141-14"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The result.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"content"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Return with the file content")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"info"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#fileinfo-object"},"FileInfo")," object"),(0,n.kt)("td",{parentName:"tr",align:null},"Return with the file content")))),(0,n.kt)("h4",{id:"example-data-5"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},' {\n    "success" : true,\n    "error": "", \n    "content": byte[], // the file content in bytes\n    "info" : {\n        "eof" : true, // is EOF\n        "totalRead" : 3000, // total read bytes\n        "position" : 3000, // last file position\n        "totalLines" :100, // total read lines\n    }\n}\n')),(0,n.kt)("h2",{id:"readtextfileresult-object"},"ReadTextFileResult Object"),(0,n.kt)("h4",{id:"version-added-0141-15"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The result.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"content"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"Return with the file content")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"info"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#fileinfo-object"},"FileInfo")," object"),(0,n.kt)("td",{parentName:"tr",align:null},"Return with the file content")))),(0,n.kt)("h4",{id:"example-data-6"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},' {\n    "success" : true,\n    "error": "", \n    "content": byte[], // the file content in bytes\n    "info" : {\n        "eof" : true, // is EOF\n        "totalRead" : 3000, // total read bytes\n        "position" : 3000, // last file position\n        "totalLines" :100, // total read lines\n    }\n}\n')),(0,n.kt)("h2",{id:"fileinfo-object"},"FileInfo Object"),(0,n.kt)("h4",{id:"version-added-0141-16"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Container for the file info properties.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"eof"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"totalRead"),(0,n.kt)("td",{parentName:"tr",align:null},"number"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"position"),(0,n.kt)("td",{parentName:"tr",align:null},"number"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"totalLines"),(0,n.kt)("td",{parentName:"tr",align:null},"number"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h2",{id:"fileindir-object"},"FileInDir Object"),(0,n.kt)("h4",{id:"version-added-0141-17"},"Version added: 0.141"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Container for the list of files and folders in a directory.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"success"),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"error"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},'Inherited from the "Result" Object')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"name"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"type"),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h4",{id:"example-data-7"},"Example data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n   "name":"Fortnite 03-19-2020 17-15-56-087.mp4",\n   "type":"file"\n}\n')))}u.isMDXComponent=!0}}]);