"use strict";(self.webpackChunkengine=self.webpackChunkengine||[]).push([[4451],{35318:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var r=a(27378);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=r.createContext({}),s=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=s(a),m=l,c=u["".concat(o,".").concat(m)]||u[m]||k[m]||n;return a?r.createElement(c,i(i({ref:t},p),{},{components:a})):r.createElement(c,i({ref:t},p))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,i=new Array(n);i[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[u]="string"==typeof e?e:l,i[1]=d;for(var s=2;s<n;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},78643:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>d,toc:()=>s});var r=a(25773),l=(a(27378),a(35318));const n={id:"reddit",image:"/img/embed/api-docs.jpg",title:"overwolf.social.reddit API",sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1}}},i=void 0,d={unversionedId:"api/social/reddit",id:"api/social/reddit",title:"overwolf.social.reddit API",description:"Provides access to the Reddit social provider.",source:"@site/../pages/api/social/reddit.mdx",sourceDirName:"api/social",slug:"/api/social/reddit",permalink:"/api/social/reddit",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/pages/../pages/api/social/reddit.mdx",tags:[],version:"current",lastUpdatedBy:"benjokoren-ow",lastUpdatedAt:1721814859,formattedLastUpdatedAt:"Jul 24, 2024",frontMatter:{id:"reddit",image:"/img/embed/api-docs.jpg",title:"overwolf.social.reddit API",sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1}}},sidebar:"api",previous:{title:"overwolf.social.discord API",permalink:"/api/social/discord"},next:{title:"overwolf.social.youtube API",permalink:"/api/social/youtube"}},o={},s=[{value:"Methods Reference",id:"methods-reference",level:2},{value:"Events Reference",id:"events-reference",level:2},{value:"Types Reference",id:"types-reference",level:2},{value:"performUserLogin()",id:"performuserlogin",level:2},{value:"Version added: 0.128",id:"version-added-0128",level:4},{value:"performLogout(callback)",id:"performlogoutcallback",level:2},{value:"Version added: 0.128",id:"version-added-0128-1",level:4},{value:"getUserInfo(callback)",id:"getuserinfocallback",level:2},{value:"Version added: 0.128",id:"version-added-0128-2",level:4},{value:"searchSubreddits(query, callback)",id:"searchsubredditsquery-callback",level:2},{value:"Version added: 0.128",id:"version-added-0128-3",level:4},{value:"share(RedditShareParameters, callback)",id:"shareredditshareparameters-callback",level:2},{value:"Version added: 0.128",id:"version-added-0128-4",level:4},{value:"shareEx(RedditShareParameters, callback, callback)",id:"shareexredditshareparameters-callback-callback",level:2},{value:"Version added: 0.198",id:"version-added-0198",level:4},{value:"Progress Note",id:"progress-note",level:4},{value:"cancelShare(string, callback)",id:"cancelsharestring-callback",level:2},{value:"Version added: 0.198",id:"version-added-0198-1",level:4},{value:"post(RedditPostParameters, callback)",id:"postredditpostparameters-callback",level:2},{value:"Version added: 0.203",id:"version-added-0203",level:4},{value:"getSubredditFlairs(subredditName, callback)",id:"getsubredditflairssubredditname-callback",level:2},{value:"Version added: 0.160",id:"version-added-0160",level:4},{value:"onLoginStateChanged",id:"onloginstatechanged",level:2},{value:"Version added: 0.128",id:"version-added-0128-5",level:4},{value:"onShareFailed",id:"onsharefailed",level:2},{value:"Version added: 0.128",id:"version-added-0128-6",level:4},{value:"RedditPostParameters Object",id:"redditpostparameters-object",level:2},{value:"Version added: 0.203",id:"version-added-0203-1",level:4},{value:"RedditShareParameters Object",id:"redditshareparameters-object",level:2},{value:"Version added: 0.128",id:"version-added-0128-7",level:4},{value:"id note",id:"id-note",level:4},{value:"useOverwolfNotifications note",id:"useoverwolfnotifications-note",level:4},{value:"Data example",id:"data-example",level:4},{value:"SocialShareResult Object",id:"socialshareresult-object",level:2},{value:"Version added: 0.198",id:"version-added-0198-2",level:4},{value:"Example data",id:"example-data",level:4},{value:"SocialShareProgress Object",id:"socialshareprogress-object",level:2},{value:"Version added: 0.198",id:"version-added-0198-3",level:4},{value:"Example data",id:"example-data-1",level:4},{value:"ShareState Enum",id:"sharestate-enum",level:2},{value:"Version added: 0.198",id:"version-added-0198-4",level:4},{value:"SearchSubredditsResult Object",id:"searchsubredditsresult-object",level:2},{value:"Version added: 0.128",id:"version-added-0128-8",level:4},{value:"Subreddit Object",id:"subreddit-object",level:2},{value:"Version added: 0.128",id:"version-added-0128-9",level:4},{value:"RedditAllowedPostTypes Object",id:"redditallowedposttypes-object",level:2},{value:"Version added: 0.128",id:"version-added-0128-10",level:4},{value:"ShareFailedEvent Object",id:"sharefailedevent-object",level:2},{value:"Version added: 0.128",id:"version-added-0128-11",level:4},{value:"Event Data Example: Success",id:"event-data-example-success",level:4},{value:"Flair Object",id:"flair-object",level:2},{value:"Version added: 0.160",id:"version-added-0160-1",level:4},{value:"Data Example",id:"data-example-1",level:4}],p={toc:s};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Provides access to the Reddit social provider."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"You can use ",(0,l.kt)("a",{parentName:"p",href:"../social#getdisabledservicescallback"},(0,l.kt)("inlineCode",{parentName:"a"},"overwolf.social.getDisabledServices()"))," method to check if the service is available.")),(0,l.kt)("h2",{id:"methods-reference"},"Methods Reference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#performuserlogin"},"overwolf.social.reddit.performUserLogin()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#performlogoutcallback"},"overwolf.social.reddit.performLogout()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#getuserinfocallback"},"overwolf.social.reddit.getUserInfo()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#searchsubredditsquery-callback"},"overwolf.social.reddit.searchSubreddits()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#shareredditshareparameters-callback"},"overwolf.social.reddit.share()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#shareexredditshareparameters-callback-callback"},"overwolf.social.reddit.shareEx()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#shareexredditpostparameters-callback"},"overwolf.social.reddit.post()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#cancelsharestring-callback"},"overwolf.social.reddit.cancelShare()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#getsubredditflairssubredditname-callback"},"overwolf.social.reddit.getSubredditFlairs()"))),(0,l.kt)("h2",{id:"events-reference"},"Events Reference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#onloginstatechanged"},"ooverwolf.social.reddit.onLoginStateChanged")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#onsharefailed"},"overwolf.social.reddit.onShareFailed"))),(0,l.kt)("h2",{id:"types-reference"},"Types Reference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#redditshareparameters-object"},"overwolf.social.reddit.RedditShareParameters")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#redditpostparameters-object"},"overwolf.social.reddit.RedditPostParameters")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#socialshareresult-object"},"overwolf.social.reddit.SocialShareResult")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#socialshareprogress-object"},"overwolf.social.reddit.SocialShareProgress")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#sharestate-enum"},"overwolf.social.reddit.enums.ShareState")," Enum"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#subreddit-object"},"overwolf.social.reddit.Subreddit")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#redditallowedposttypes-object"},"overwolf.social.reddit.RedditAllowedPostTypes")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#searchsubredditsresult-object"},"overwolf.social.reddit.SearchSubredditsResult")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#sharefailedevent-object"},"overwolf.social.reddit.ShareFailedEvent")," Object"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#loginstatechangedevent-object"},"overwolf.social.reddit.LoginStateChangedEvent")," Object")),(0,l.kt)("h2",{id:"performuserlogin"},"performUserLogin()"),(0,l.kt)("h4",{id:"version-added-0128"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Opens the login dialog. ")),(0,l.kt)("p",null,"There is no callback for this method and the only way to know if the user signed in is via ",(0,l.kt)("a",{parentName:"p",href:"#onloginstatechanged"},"onLoginStateChanged")," event."),(0,l.kt)("h2",{id:"performlogoutcallback"},"performLogout(callback)"),(0,l.kt)("h4",{id:"version-added-0128-1"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},'Performs a "strong" sign out of Reddit, so that even if the user performs a login via the Overwolf Settings / Accounts page, he will be considered signed out.')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},"(Result) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function which will be called with the status of the request")))),(0,l.kt)("h2",{id:"getuserinfocallback"},"getUserInfo(callback)"),(0,l.kt)("h4",{id:"version-added-0128-2"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If the user is currently logged into Reddit, this will return user information, Otherwise, an error is returned.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"../social#getuserinforesult-object"},"(Result: GetUserInfoResult)")," => void"),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function which will be called with the status of the request")))),(0,l.kt)("h2",{id:"searchsubredditsquery-callback"},"searchSubreddits(query, callback)"),(0,l.kt)("h4",{id:"version-added-0128-3"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Search for subreddits whose names begin with a substring.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The search string")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#searchsubredditsresult-object"},"(Result: SearchSubredditsResult)")," => void"),(0,l.kt)("td",{parentName:"tr",align:null},"Will contain an array of subreddits that match the search string")))),(0,l.kt)("h2",{id:"shareredditshareparameters-callback"},"share(RedditShareParameters, callback)"),(0,l.kt)("h4",{id:"version-added-0128-4"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If the user is currently logged into reddit, this will perform the video share.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redditShareParameters"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#redditshareparameters-object"},"RedditShareParameters")," Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The share parameters")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},"(Result) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function which will be called with the status of the request")))),(0,l.kt)("p",null,"Types of errors that can occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Disconnected (user isn't signed in)"),(0,l.kt)("li",{parentName:"ul"},"MissingFile (trying to share a missing file)"),(0,l.kt)("li",{parentName:"ul"},"UnsupportedFile (trying to share an unsupported format)")),(0,l.kt)("h2",{id:"shareexredditshareparameters-callback-callback"},"shareEx(RedditShareParameters, callback, callback)"),(0,l.kt)("h4",{id:"version-added-0198"},"Version added: 0.198"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If the user is currently logged into Reddit, this will perform the video share.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redditShareParams"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#redditshareparameters-object"},"RedditShareParameters")," Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The share parameters")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"resultCallback"),(0,l.kt)("td",{parentName:"tr",align:null},"(",(0,l.kt)("a",{parentName:"td",href:"#socialshareresult-object"},"SocialShareResult"),") => void"),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function which will be called with the resulting status of the request")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"progressCallback"),(0,l.kt)("td",{parentName:"tr",align:null},"(",(0,l.kt)("a",{parentName:"td",href:"#socialshareprogress-object"},"socialShareProgress"),") => void"),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function which will be called whenever share progress is made. See ",(0,l.kt)("a",{parentName:"td",href:"#progress-note"},"note"))))),(0,l.kt)("p",null,"Types of errors that can occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Disconnected (user isn't signed in)"),(0,l.kt)("li",{parentName:"ul"},"MissingFile (trying to share a missing file)"),(0,l.kt)("li",{parentName:"ul"},"UnsupportedFile (trying to share an unsupported format)")),(0,l.kt)("h4",{id:"progress-note"},"Progress Note"),(0,l.kt)("p",null,"This callback will only be called when uploading a video."),(0,l.kt)("p",null,"Videos will be uploaded in uniforamlly sized chunks (except for the last chunk). The callback will be called every time another chunk was successfully uploaded."),(0,l.kt)("h2",{id:"cancelsharestring-callback"},"cancelShare(string, callback)"),(0,l.kt)("h4",{id:"version-added-0198-1"},"Version added: 0.198"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"cancels an ongoing share request with the given id, if valid. Callback will be invoked with success if such a request was found and a cancellation order was executed (may take a while)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The request ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},"(Result) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"Called with the result of the cancellation")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'overwolf.social.reddit.cancelShare("2", console.log)\n')),(0,l.kt)("h2",{id:"postredditpostparameters-callback"},"post(RedditPostParameters, callback)"),(0,l.kt)("h4",{id:"version-added-0203"},"Version added: 0.203"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If the user is currently logged into Reddit, this will perform the video share.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redditShareParams"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#redditpostparameters-object"},"RedditPostParameters")," Object"),(0,l.kt)("td",{parentName:"tr",align:null},"The post parameters")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},"(Result) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function which will be called with the status of the request")))),(0,l.kt)("p",null,"Types of errors that can occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Disconnected (user isn't signed in)")),(0,l.kt)("h2",{id:"getsubredditflairssubredditname-callback"},"getSubredditFlairs(subredditName, callback)"),(0,l.kt)("h4",{id:"version-added-0160"},"Version added: 0.160"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Returns a list of flairs supported by the given subreddit.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subredditName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The given subreddit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},"(Result) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"A callback function which will be called with the status of the request")))),(0,l.kt)("h2",{id:"onloginstatechanged"},"onLoginStateChanged"),(0,l.kt)("h4",{id:"version-added-0128-5"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Fired when the user\u2019s login state changes, with the following structure: ",(0,l.kt)("a",{parentName:"p",href:"../social#loginstatechangedevent-object"},"LoginStateChangedEvent")," Object.")),(0,l.kt)("h2",{id:"onsharefailed"},"onShareFailed"),(0,l.kt)("h4",{id:"version-added-0128-6"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Fired when an error is returned from Reddit, with the following structure: ",(0,l.kt)("a",{parentName:"p",href:"#sharefailedevent-object"},(0,l.kt)("inlineCode",{parentName:"a"},"ShareFailedEvent"))," Object.")),(0,l.kt)("h2",{id:"redditpostparameters-object"},"RedditPostParameters Object"),(0,l.kt)("h4",{id:"version-added-0203-1"},"Version added: 0.203"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This object defines all parameters that should be passed to the Reddit ",(0,l.kt)("a",{parentName:"p",href:"#postredditpostparameters-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"post()")),".")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Putting a URL in the ",(0,l.kt)("inlineCode",{parentName:"p"},"content"),' property will create a Reddit post that is of a link type. Otherwise, it will be a normal "self" reddit post.')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subreddit"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The subreddit to which the post will be shared")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"title"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The shared post's title")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"content"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The shared post's content")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"flair_id (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#flair-object"},"Flair")," object"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"redditshareparameters-object"},"RedditShareParameters Object"),(0,l.kt)("h4",{id:"version-added-0128-7"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This object defines all parameters that can/should be passed to the Reddit ",(0,l.kt)("a",{parentName:"p",href:"#shareredditshareparameters-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"share()"))," and ",(0,l.kt)("a",{parentName:"p",href:"#shareexredditshareparameters-callback-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"shareEx()"))," methods.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"file"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The file to share")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The ID for the current share request. See ",(0,l.kt)("a",{parentName:"td",href:"#id-note"},"note"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"useOverwolfNotifications"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether or not Overwolf notifications should be used. See ",(0,l.kt)("a",{parentName:"td",href:"#useoverwolfnotifications-note"},"note"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subreddit"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The subreddit to which the file will be shared")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"title"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The shared video's title")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"description"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The shared video's description")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"trimming (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"../media/videos#videocompositionsegment-object"},"VideoCompositionSegment")),(0,l.kt)("td",{parentName:"tr",align:null},"An object containing start time and end time for the desired VideoCompositionSegment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tags (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"An array of chronological events that occurred during the capture")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gameClassId (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The associated game's class ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gameTitle (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The associated game's title")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metadata (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"Extra information about the game session")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"flair_id (Optional)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#flair-object"},"Flair")," object"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h4",{id:"id-note"},"id note"),(0,l.kt)("p",null,"When calling ",(0,l.kt)("a",{parentName:"p",href:"#shareexredditshareparameters-callback-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"overwolf.social.reddit.shareEx()")),", it is required to supply it with a request ID. This ID will also be used in case you wish to cancel this share using ",(0,l.kt)("a",{parentName:"p",href:"#cancelsharestring-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"overwolf.social.reddit.cancelShare()")),"."),(0,l.kt)("h4",{id:"useoverwolfnotifications-note"},"useOverwolfNotifications note"),(0,l.kt)("p",null,"When calling ",(0,l.kt)("a",{parentName:"p",href:"#shareredditshareparameters-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"overwolf.social.reddit.share()")),", this will default to true.\nWhen calling ",(0,l.kt)("a",{parentName:"p",href:"#shareexredditshareparameters-callback-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"overwolf.social.reddit.shareEx()")),", this will default to false."),(0,l.kt)("h4",{id:"data-example"},"Data example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "file": "file://D:\\\\Videos\\\\Overwolf\\\\Outplayed\\\\League of Legends/League of Legends_8-16-2020_2-6-20-576\\\\League of Legends 08-16-2020_2-06-22-522.mp4",\n  "id": "5",\n  "useOverwolfNotifications": false,\n  "tags": [\n    "PvP Round"\n  ],\n  "gameClassId": 5426,\n  "gameTitle": "League of Legends",\n  "title": "Check out my video! #TeamfightTactics | Captured by #Outplayed",\n  "subreddit": "clips",\n  "trimming": {\n    "startTime": 1136507,\n    "endTime": 1177391\n  },\n  "metadata": {\n    "mode": "tft"\n  }\n}\n')),(0,l.kt)("h2",{id:"socialshareresult-object"},"SocialShareResult Object"),(0,l.kt)("h4",{id:"version-added-0198-2"},"Version added: 0.198"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Container for the url shared in a successful share.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The url of the generated result")))),(0,l.kt)("h4",{id:"example-data"},"Example data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "url": "https://v.redd.it/z08avb339n801/DASH_1_2_M"\n}\n')),(0,l.kt)("h2",{id:"socialshareprogress-object"},"SocialShareProgress Object"),(0,l.kt)("h4",{id:"version-added-0198-3"},"Version added: 0.198"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The current progress of the share request")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"progress"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"The current precentage of upload progress")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The id of the share request")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#sharestate-enum"},"ShareState")),(0,l.kt)("td",{parentName:"tr",align:null},"The current state of the share request")))),(0,l.kt)("h4",{id:"example-data-1"},"Example data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "progress": 56,\n  "id": "1",\n  "state": "Uploading"\n}\n')),(0,l.kt)("h2",{id:"sharestate-enum"},"ShareState Enum"),(0,l.kt)("h4",{id:"version-added-0198-4"},"Version added: 0.198"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The current state of the ",(0,l.kt)("a",{parentName:"p",href:"#shareexredditshareparameters-callback-callback"},(0,l.kt)("inlineCode",{parentName:"a"},"overwolf.social.reddit.shareEx()"))," operation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Options"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Started"),(0,l.kt)("td",{parentName:"tr",align:null},"The upload has started")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Uploading"),(0,l.kt)("td",{parentName:"tr",align:null},"The upload is in progress")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Finished"),(0,l.kt)("td",{parentName:"tr",align:null},"The upload has finished")))),(0,l.kt)("h2",{id:"searchsubredditsresult-object"},"SearchSubredditsResult Object"),(0,l.kt)("h4",{id:"version-added-0128-8"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Container for search subreddits result.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subreddits"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#subreddit-object"},"Subreddit"),"[]"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"subreddit-object"},"Subreddit Object"),(0,l.kt)("h4",{id:"version-added-0128-9"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Container object.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subreddit"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"displayName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"allowedPostTypes"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#redditallowedposttypes-object"},"RedditAllowedPostTypes")," object"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"communityIcon"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"redditallowedposttypes-object"},"RedditAllowedPostTypes Object"),(0,l.kt)("h4",{id:"version-added-0128-10"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Container object.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"videos"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"links"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"spoilers"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"sharefailedevent-object"},"ShareFailedEvent Object"),(0,l.kt)("h4",{id:"version-added-0128-11"},"Version added: 0.128"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Container object.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"error"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"details"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h4",{id:"event-data-example-success"},"Event Data Example: Success"),(0,l.kt)("p",null,"Currently, supported errors are:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{ "error": "NotFound", "details": "that subreddit doesn\'t exist" }\n{ "error": "RateLimit", "details": "you are doing that too much. try again in 7 minutes." }\n')),(0,l.kt)("h2",{id:"flair-object"},"Flair Object"),(0,l.kt)("h4",{id:"version-added-0160-1"},"Version added: 0.160"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Container object.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mod_only"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"allowable_content"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h4",{id:"data-example-1"},"Data Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "248a072-1e48-11e6-0e1648f491d1",\n  "text": "Highlight",\n  "mod_only": false,\n  "allowable_content": "all"\n}\n')))}u.isMDXComponent=!0}}]);