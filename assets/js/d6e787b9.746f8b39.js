"use strict";(self.webpackChunkengine=self.webpackChunkengine||[]).push([[656],{35318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),f=i,v=c["".concat(l,".").concat(f)]||c[f]||g[f]||o;return n?r.createElement(v,a(a({ref:t},u),{},{components:n})):r.createElement(v,a({ref:t},u))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},24766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(25773),i=(n(27378),n(35318));const o={id:"plugins-overview",image:"/img/embed/api-best-practices.jpg",title:"Overwolf Plug-ins overview",sidebar_label:"Plugins overview",sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1}}},a=void 0,s={unversionedId:"topics/using-plugins/plugins-overview",id:"topics/using-plugins/plugins-overview",title:"Overwolf Plug-ins overview",description:"A plug-in is a .NET class library (DLL) that can contain functions, events or properties written in a .NET language. Your app can call on the plugin\u2019s contents from within the context of the Javascript.",source:"@site/../pages/topics/using-plugins/plugins-overview.mdx",sourceDirName:"topics/using-plugins",slug:"/topics/using-plugins/plugins-overview",permalink:"/topics/using-plugins/plugins-overview",draft:!1,editUrl:"https://github.com/overwolf/overwolf.github.io/tree/source/pages/../pages/topics/using-plugins/plugins-overview.mdx",tags:[],version:"current",lastUpdatedBy:"benjokoren-ow",lastUpdatedAt:1721141004,formattedLastUpdatedAt:"Jul 16, 2024",frontMatter:{id:"plugins-overview",image:"/img/embed/api-best-practices.jpg",title:"Overwolf Plug-ins overview",sidebar_label:"Plugins overview",sidebar_custom_props:{tags:{overwolf_platform:!0,electron_platform:!1}}},sidebar:"topics",previous:{title:"Plug-in Implementation",permalink:"/topics/using-plugins/how-to-use-plugins-in-your-app"},next:{title:"Process Manager plugin",permalink:"/topics/using-plugins/process-manager-plugin"}},l={},p=[],u={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A plug-in is a .NET class library (DLL) that can contain functions, events or properties written in a .NET language. Your app can call on the plugin\u2019s contents from within the context of the Javascript."),(0,i.kt)("p",null,"The Overwolf plugin system allows your app to:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Implement functionality that is missing from the basic Overwolf API including local file access, networking, playing audio, integration with 3rd party libraries, etc."),(0,i.kt)("li",{parentName:"ol"},"Leverage existing C#/C/C++ code and use it in your app. This is somewhat similar to ",(0,i.kt)("a",{parentName:"li",href:"https://blog.risingstack.com/writing-native-node-js-modules/"},"Native Node.js Modules"),", however we do not yet support Node.js modules. ")),(0,i.kt)("p",null,"We've created a few simple plugins that might answer your needs as an app developer or give you a good starting point for developing your own, you can find them in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/overwolf/overwolf-plugins"},"Overwolf GitHub repository"),"."))}c.isMDXComponent=!0}}]);